syntax = "proto3";

package gbdevw.colibri.domain;
option java_package = "gbdevw.colibri.domain";
option java_multiple_files = true;

enum Currency {
    EUR=0;
    USD=1;
    BTC=2;
    ETH=3;
}

enum Side {
    BUY=0;
    SELL=1;
}

/* Message that contains the data of a trade
 * timestamp : The number of milliseconds from the epoch of 1970-01-01T00:00:00Z.
 * id : coinbase id for the event
 * unit : Unit Currency (Ex : BTC, ETH)
 * quote : Quote Currency (Ex : EUR, USD)
 * price : Price in quote Currency for one unit of unit Currency
 * size : Number of unit Currency exchanged during last trade
 * Side : Side of the trade
 */
message Match {
    uint64 timestamp=1;
    uint64 id=2;
    Currency unit=3;
    Currency quote=4;
    double price=5;
    double size=6;
    Side Side=7;
}

/* Message that contain data of a market tick.
 * timestamp : The number of milliseconds from the epoch of 1970-01-01T00:00:00Z.
 * id : coinbase id for the event
 * unit : Unit Currency (Ex : BTC, ETH)
 * quote : Quote Currency (Ex : EUR, USD)
 * lastTradePrice : Price in quote Currency for one unit of unit Currency from the last trade
 * lastTradeSize : Number of unit Currency exchanged during last trade
 * lastTradeSide : Side of the last trade
 * bestBid : Best offered price in quote Currency for one unit of unit Currency
 * bestAsk : Best asked price in quote Currency for one unit of unit Currency
 */
message Ticker {
    uint64 timestamp=1;
    uint64 id=2;
    Currency unit=3;
    Currency quote=4;
    double lastTradePrice=5;
    double lastTradeSize=6;
    Side lastTradeSide=7;
    double bestBid=8;
    double bestAsk=9;
}

/* Open, High, Low, Close & Volume candle
 * periodStart : The number of milliseconds from the epoch of 1970-01-01T00:00:00Z. - Start of the period
 * unit : Unit Currency (Ex : BTC, ETH)
 * quote : Quote Currency (Ex : EUR, USD)
 * periodDuration : Duration of the period in milliseconds
 * open : Open price in quote Currency for one unit of unit Currency
 * high : Max. price in quote Currency for one unit of unit Currency
 * low : Min. price in quote Currency for one unit of unit Currency
 * close : Close price in quote Currency for one unit of unit Currency
 * volume : Volume of unit Currency exchanged
 */
message OHLCV {
    uint64 periodStart=1;
    Currency unit=2;
    Currency quote=3;
    uint64 periodDuration=4;
    double open=5;
    double high=6;
    double low=7;
    double close=8;
    double volume=9;
}

/* Moving Average Convergence-Divergence (ex : Slow EMA : 26, Fast EMA : 10, Signal : 9)
 * timestamp : The number of milliseconds from the epoch of 1970-01-01T00:00:00Z. - When the indicator is produced
 * unit : Unit Currency (Ex : BTC, ETH)
 * quote : Quote Currency (Ex : EUR, USD)
 * macd : MACD value (slow - fast)
 * signal : Signal value
 */
message MACD {
    uint64 timestamp=1;
    Currency unit=2;
    Currency quote=3;
    double macd=4;
    double signal=5; 
}

/* Rate Of Change
 * timestamp : The number of milliseconds from the epoch of 1970-01-01T00:00:00Z. - When the indicator is produced
 * unit : Unit Currency (Ex : BTC, ETH)
 * quote : Quote Currency (Ex : EUR, USD)
 * xPeriod : Number of OHLCV used to produce the indicator
 * roc : ROC value for the period (decimal, 0.01 stands for 1%)
 * resistance : Maximal closing price in quote Currency for one unit of unit Currency for the period
 * support : Minimal closing price in quote Currency for one unit of unit Currency for the period
 */
message ROC {
    uint64 timestamp=1;
    Currency unit=2;
    Currency quote=3;
    uint32 xPeriod=4;
    double roc=6;
    double resistance=7;
    double support=8;
}

/* Relative Strength Index
 * timestamp : The number of milliseconds from the epoch of 1970-01-01T00:00:00Z. - When the indicator is produced
 * unit : Unit Currency (Ex : BTC, ETH)
 * quote : Quote Currency (Ex : EUR, USD)
 * xPeriod : Number of candles used to produce the indicator
 * rsi : RSI value
 */
 message RSI {
    uint64 timestamp=1;
    Currency unit=2;
    Currency quote=3;
    uint32 xPeriod=4;
    double rsi=5;
}